[03.11]

1. ImageKit 사용

2. 렌더링 보완

3. SQL 데이터 연습

4. 토스트 사용

5. google Auth 사용

6. postman 사용

7. Route Handler 사용




=================================
1. 홈페이지 무한 스크롤 구현

-저장된 데이터를 3~5개씩 불러와 렌더링 하도록 한다.
-사용자가 특정 지점에 닿으면 데이터를 더 불러와 렌더링하도록 한다.
-처음 렌더링 시점에서는 스켈레톤을 사용해 보여주도록 한다.

1) 무한 스크롤 기능 구현에 대한 논점

- 전체 데이터를 불러 왔을 때 또는 전체 데이터가 존재할 때, 우선 가장 최신순의 데이터 3개를 가져온다.
-특정 위치에 도달했을 때를, useRef로 판단하고, 요소가 화면에 n% 들어오면 데이터를 추가로 더 불러와서 렌더링한다.
-전체 데이터 이상을 불러왔을 경우, 데이터를 더 이상 로드하지 않는다.
-현재 렌더링하고 있는 데이터를 상태로 관리하고, 또한 현재 렌더링하고 있는 데이터의 수 또한 상태로 관리하도록 한다.

2) 무한 스크롤을 api 데이터 불러오기를 통해 구현할 경우


2. 홈렌더링 데이터에서 수정해야 할 점

-like 데이터에는 유저 정보가 담겨 있어야 한다. 그렇게 해야 현재 내가 좋아요를 눌렀는지 판단할 수 있다.



3. 이미지를 케러셀을 통해 렌더링하고, 케러샐에 점을 찍도록 하기


4. 둘러보기 페이지 탭 3개 만들기

1) [채널탭]
-각각의 탭은 상단에 고정적으로 위치해야 하며, 각 탭은 화살표를 눌러 전체를 열어볼 수 있으며, 또한 x-scrool이 되어야 한다.

-챌린지 채널: 각 채널들은 w-[90%] 정도의 크기를 가지며, x scroll이 되어야 하며, 전체 데이터에서 4개를 렌더링하도록 한다.

-지금 뜨는 채널: 각 태그에 대하여, 4개의 이미지를 렌더링하도록 하고, 각 이미지의 크기는 세로의 비율이 가로의 비율보다 높아야 한다. 또한 각 탭은 subTitle을 가지고 있다.

2) [집들이 탭]

-각 집들에 대해서는 정렬을 할 수 있어야 한다. 정렬을 하는 영역을 가장 위쪽에 표기해야 하며, 그 영역은 x-scroll 될 수 있어야 한다.

-스크랩 횟수, 조회수, 날짜에 대한 정보를 통해 NEW 표기, 제목, 유저, 북마크 여부를 표기해야 한다.

-집들이는 집에 대한 정보를 표기하는 페이지로 옮겨갈 수 있어야 한다.

3) [집사진 탭]



5. 쇼핑 페이지 렌더링 기본 >>> 이미지만


6. 인테리어/생활 페이지 렌더링 >>> 이미지만


7. 각각의 탭을 넘기는 렌더링



8. [데이터 api 렌더링에 따른 수정 사항]

-이미지에 따른 swiper 동작 >>> ok

-이미지 4개 중 선택에 따른 화면 전환 >>> after >>> 이것에 대한 생각!!!이 필요한 부분

-댓글 페이지 렌더링 >>> ok >>> 댓글 추가에 대한 렌더링, 댓글이 없을 때에 대한 렌더링링

-좋아요 버튼 추가 >>> ok >>> 좋아요 누른 사람의 배열을 담아서, 그 배열 확인하여 낮추기 높이기 제작 >>> 아니면 false, true의 상태 변화로 한 개인이 true, false정도만 작동시킬 수 있게!

-공유 버튼 추가

-댓글 달기 및 삭제 버튼 >>> 댓글 탭이 오른쪽에서 왼쪽으로 등장하는! >>> ok >>> 삭제를 하기 위해서는 유저 데이터의 추가, 유저 데이터를 불러와야함 *******************************

-팔로잉 데이터 추가

-사용자 로그인, 사용자 회원가입 >>> ok >>> 그것에 대한 오류처리 및 페이지 만들기

-로그인 데이터 가져와서 렌더링하기, 유저페이지 구현

-유저 정보에 따른 좋아요, 댓글 등에 대한 렌더링 및 코드 수정 ***********

-데이터를 추가해서 무한스크롤에 대한 구현 >>> ok

-북마크를 추가하는 버튼

-아래쪽 정보 탭 만들기(알뜰한 쇼핑을 위한 정보를 놓치지 않게 알려드릴까요?)


========== >>> api 렌더링 준비


7. user 데이터 만들기, 홈리스트 데이터 삽입 >>> ok